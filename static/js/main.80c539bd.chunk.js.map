{"version":3,"sources":["sass/image/ball2.png","sass/image/pokemon.svg","app/components/Type.jsx","app/components/NavBar.jsx","app/components/pokemon/PokemonCard.jsx","app/components/pokemon/PokemonList.jsx","app/components/ButtonLeadMore.jsx","app/components/Board.jsx","app/components/pokemon/Pokemon.jsx","app/store.js","app/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","colors_type","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","shadow","unknown","TypeList","state","url","typeList","axios","get","this","res","setState","data","Fragment","className","map","key","name","style","background","color","href","Component","NavBar","src","ball2","width","height","alt","border","type","data-toggle","aria-haspopup","aria-expanded","Type","ImagePokem","styled","img","Card","div","StyledLink","Link","PokemonCard","imageUrl","pokemonIndex","imageLoading","toManyRequests","types","props","split","length","pokemonUrl","pokemonRes","to","pokemon","onLoad","onError","PokemonList","pokemons","ButtonLeadMore","getMore","role","aria-label","onClick","Board","CardPokemon","colors_background","Pokemon","description","stats","attack","defense","hp","specialAttack","specialDefense","speed","weight","moves","themeColor","statTitleWidth","statBarWidth","match","params","pokemonSpeciesUrl","stat","Math","round","bgColor","abilities","ability","toLowerCase","s","charAt","toUpperCase","substring","join","move","evs","filter","effort","then","flavor_text_entries","some","flavor","language","flavor_text","label","backgroundColor","toString","padStart","aria-valuenow","aria-valuemin","aria-valuemax","pokemonStore","count","next","previous","updatePokemons","a","results","App","useState","setPokemonStore","getMorePokemons","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80c539bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ball2.edd72be4.png\";","module.exports = __webpack_public_path__ + \"static/media/pokemon.6058de96.svg\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst colors_type = {\r\n  bug: \"B1C12E\",\r\n  dark: \"4F3A2D\",\r\n  dragon: \"755EDF\",\r\n  electric: \"FCBC17\",\r\n  fairy: \"F4B1F4\",\r\n  fighting: \"BB2F27\",\r\n  fire: \"E73B0C\",\r\n  flying: \"A3B3F7\",\r\n  ghost: \"6060B2\",\r\n  grass: \"74C236\",\r\n  ground: \"D3B357\",\r\n  ice: \"A3E7FD\",\r\n  normal: \"C8C4BC\",\r\n  poison: \"934594\",\r\n  psychic: \"ED4882\",\r\n  rock: \"B9A156\",\r\n  steel: \"B5B5C3\",\r\n  water: \"3295F6\",\r\n  shadow: \"3F4171\",\r\n  unknown: \"3C3837\"\r\n};\r\n\r\nclass TypeList extends Component {\r\n  state = {\r\n    url: \"http://pokeapi.co/api/v2/type/?limit=999\",\r\n    typeList: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(this.state.url);\r\n    this.setState({ typeList: res.data[\"results\"] });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.typeList ? (\r\n          <div className=\" col\">\r\n            {this.state.typeList.map(typeList => (\r\n              <div\r\n                key={typeList.name}\r\n                className=\"badge badge-pill mr-3 mb-1 text-capitalize badge-costum-type\"\r\n                style={{\r\n                  background: `#${colors_type[typeList.name]}`,\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <a className=\"dropdown-item dropdown-item-costum\" href=\"#\">\r\n                  {typeList.name}\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h1 className=\"loading\">Loading</h1>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TypeList;\r\n","import React, { Component } from \"react\";\r\nimport ball2 from \"../../sass/image/ball2.png\";\r\nimport Type from \"./Type\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-light navbar-custom fixed-top\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <img\r\n              src={ball2}\r\n              width=\"35\"\r\n              height=\"35\"\r\n              className=\"d-inline-block align-top ball\"\r\n              alt=\"\"\r\n            />\r\n            <img\r\n              src=\"https://fontmeme.com/permalink/200321/0ea46dc4ce09ee94d63a8925a3f90273.png\"\r\n              alt=\"pokemon-font\"\r\n              border=\"0\"\r\n            />\r\n          </a>\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger dropdown-toggle mr-5\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              All Types\r\n            </button>\r\n            <div className=\"dropdown-menu dropdown-costum\">\r\n              <Type />\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport pokemon from \"../../../sass/image/pokemon.svg\";\r\nimport axios from \"axios\";\r\n\r\nconst ImagePokem = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  box-shadow: 2px 3px 10px 1px rgba(0, 0, 0, 0.75);\r\n  transition: all 0.3s cubic-bezier(0.3, 1, 0.3, 1);\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n  cursor: default;\r\n  &:hover,\r\n  &:visited,\r\n  &:focus,\r\n  &:link {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst colors_type = {\r\n  bug: \"B1C12E\",\r\n  dark: \"4F3A2D\",\r\n  dragon: \"755EDF\",\r\n  electric: \"FCBC17\",\r\n  fairy: \"F4B1F4\",\r\n  fighting: \"BB2F27\",\r\n  fire: \"E73B0C\",\r\n  flying: \"A3B3F7\",\r\n  ghost: \"6060B2\",\r\n  grass: \"74C236\",\r\n  ground: \"D3B357\",\r\n  ice: \"A3E7FD\",\r\n  normal: \"C8C4BC\",\r\n  poison: \"934594\",\r\n  psychic: \"ED4882\",\r\n  rock: \"B9A156\",\r\n  steel: \"B5B5C3\",\r\n  water: \"3295F6\",\r\n  shadow: \"3F4171\",\r\n  unknown: \"3C3837\"\r\n};\r\n\r\nexport default class PokemonCard extends Component {\r\n  state = {\r\n    name: \"\",\r\n    imageUrl: \"\",\r\n    pokemonIndex: \" \",\r\n    imageLoading: true,\r\n    toManyRequests: false,\r\n    types: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const name = this.props.name;\r\n    const url = this.props.url;\r\n    const pokemonIndex = url.split(\"/\")[url.split(\"/\").length - 2];\r\n\r\n    const imageUrl = `https://pokeres.bastionbot.org/images/pokemon/${pokemonIndex}.png?raw=true`;\r\n\r\n    // https://pokeres.bastionbot.org/images/pokemon/${pokemonIndex}.png?raw=true    good picture\r\n    // `https://projectpokemon.org/images/normal-sprite/${name}.gif`    giff\r\n    // https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${pokemonIndex}.png?raw=true    standart picture\r\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\r\n\r\n    //get pokemon info\r\n    const pokemonRes = await axios.get(pokemonUrl);\r\n\r\n    const types = pokemonRes.data.types.map(type => type.type.name);\r\n\r\n    this.setState({\r\n      types: types,\r\n      name: name,\r\n      imageUrl: imageUrl,\r\n      pokemonIndex: pokemonIndex\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-4 mb-5 ml-auto \">\r\n        <StyledLink to={`pokemon/${this.state.pokemonIndex}`}>\r\n          <Card className=\"card mx-auto card-costum\">\r\n            <div className=\"card-header topBottomCard stage\">\r\n              <div className=\"\"></div>\r\n              <img src={pokemon} alt=\"\" className=\"poceball-card blob\" />\r\n            </div>\r\n            <div className=\"card-body mx-auto\">\r\n              {this.state.imageLoading ? <h4>Loading...</h4> : null}\r\n\r\n              <ImagePokem\r\n                className=\"card-img-top rounded mx-auto mt-2 mb-3 card-img-costum\"\r\n                src={this.state.imageUrl}\r\n                onLoad={() => this.setState({ imageLoading: false })}\r\n                onError={() => this.setState({ toManyRequests: true })}\r\n              />\r\n\r\n              <h6 className=\"card-title text-capitalize\">{this.state.name}</h6>\r\n              <div className=\"center\">\r\n                {this.state.types.map(type => (\r\n                  <span\r\n                    key={type}\r\n                    className=\"badge badge-pill mr-2 text-capitalize badge-costum\"\r\n                    style={{\r\n                      background: `#${colors_type[type]}`,\r\n                      color: \"white\"\r\n                    }}\r\n                  >\r\n                    {type}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </StyledLink>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PokemonCard from \"./PokemonCard.jsx\";\r\n\r\nclass PokemonList extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.pokemons ? (\r\n          <div className=\"row \">\r\n            {this.props.pokemons.map(pokemon => (\r\n              <PokemonCard\r\n                name={pokemon.name}\r\n                url={pokemon.url}\r\n                key={pokemon.name}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h1 className=\"loading\">Loading</h1>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonList;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function ButtonLeadMore({ getMore }) {\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"btn-group btn-group-lg btn-costum-div\"\r\n        role=\"group\"\r\n        aria-label=\"\"\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-costum\"\r\n          onClick={getMore}\r\n        >\r\n          Lead More\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PokemonList from \"../components/pokemon/PokemonList.jsx\";\r\nimport ButtonLeadMore from \"./ButtonLeadMore.jsx\";\r\n\r\nexport default class Board extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row \">\r\n          <div className=\"col \">\r\n            <PokemonList pokemons={this.props.pokemons} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-center btn-load\">\r\n          <ButtonLeadMore getMore={this.props.getMore} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CardPokemon = styled.div`\r\n  box-shadow: 2px 3px 10px 1px rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst colors_type = {\r\n  bug: \"B1C12E\",\r\n  dark: \"4F3A2D\",\r\n  dragon: \"755EDF\",\r\n  electric: \"FCBC17\",\r\n  fairy: \"F4B1F4\",\r\n  fighting: \"823551D\",\r\n  fire: \"E73B0C\",\r\n  flying: \"A3B3F7\",\r\n  ghost: \"6060B2\",\r\n  grass: \"74C236\",\r\n  ground: \"D3B357\",\r\n  ice: \"A3E7FD\",\r\n  normal: \"C8C4BC\",\r\n  poison: \"934594\",\r\n  psychic: \"ED4882\",\r\n  rock: \"B9A156\",\r\n  steel: \"B5B5C3\",\r\n  water: \"3295F6\"\r\n};\r\n\r\nconst colors_background = {\r\n  fire: \"#FDDFDF\",\r\n  grass: \"#DEFDE0\",\r\n  electric: \"#FCF7DE\",\r\n  water: \"#DEF3FD\",\r\n  ground: \"#f4e7da\",\r\n  rock: \"#d5d5d4\",\r\n  fairy: \"#fceaff\",\r\n  poison: \"#98d7a5\",\r\n  bug: \"#f8d5a3\",\r\n  dragon: \"#97b3e6\",\r\n  psychic: \"#eaeda1\",\r\n  flying: \"#F5F5F5\",\r\n  fighting: \"#E6E0D4\",\r\n  normal: \"#F5F5F5\"\r\n};\r\n\r\nexport default class Pokemon extends Component {\r\n  state = {\r\n    name: \"\",\r\n    pokemonIndex: \"\",\r\n    imageUrl: \"\",\r\n    types: [],\r\n    description: \"\",\r\n    stats: {\r\n      attack: \"\",\r\n      defense: \"\",\r\n      hp: \"\",\r\n      specialAttack: \"\",\r\n      specialDefense: \"\",\r\n      speed: \"\"\r\n    },\r\n    weight: \"\",\r\n    moves: [],\r\n    themeColor: \"\",\r\n    statTitleWidth: 3,\r\n    statBarWidth: 9,\r\n    imageLoading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { pokemonIndex } = this.props.match.params;\r\n\r\n    // Urls for pokemon information\r\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\r\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\r\n\r\n    //get pokemon info\r\n    const pokemonRes = await axios.get(pokemonUrl);\r\n    const name = pokemonRes.data.name;\r\n    this.setState({ name });\r\n    // const imageUrl = pokemonRes.data.sprites.front_default;\r\n    const imageUrl = `https://projectpokemon.org/images/normal-sprite/${name}.gif`;\r\n    let { attack, defense, hp, specialAttack, specialDefense, speed } = \"\";\r\n    pokemonRes.data.stats.map(stat => {\r\n      switch (stat.stat.name) {\r\n        case \"attack\":\r\n          attack = stat[\"base_stat\"];\r\n          break;\r\n        case \"defense\":\r\n          defense = stat[\"base_stat\"];\r\n          break;\r\n        case \"hp\":\r\n          hp = stat[\"base_stat\"];\r\n          break;\r\n        case \"special-attack\":\r\n          specialAttack = stat[\"base_stat\"];\r\n          break;\r\n        case \"special-defense\":\r\n          specialDefense = stat[\"base_stat\"];\r\n          break;\r\n        case \"speed\":\r\n          speed = stat[\"base_stat\"];\r\n          break;\r\n      }\r\n    });\r\n    //in hectogram to kilogram\r\n    const weight =\r\n      Math.round((pokemonRes.data.weight * 0.1 + 0.0001) * 100) / 100;\r\n\r\n    const types = pokemonRes.data.types.map(type => type.type.name);\r\n    const themeColor = `${colors_type[types[types.length - 1]]}`;\r\n    const bgColor = `${colors_background[types[types.length - 1]]}`;\r\n\r\n    const abilities = pokemonRes.data.abilities\r\n      .map(ability => {\r\n        return ability.ability.name\r\n          .toLowerCase()\r\n          .split(\"-\")\r\n          .map(s => s.charAt(0).toUpperCase() + s.substring(1))\r\n          .join(\" \");\r\n      })\r\n      .join(\", \");\r\n    const moves = pokemonRes.data.moves\r\n      .map(move => {\r\n        return move.move.name\r\n          .toLowerCase()\r\n          .split(\"-\")\r\n          .map(s => s.charAt(0).toUpperCase() + s.substring(1))\r\n          .join(\" \");\r\n      })\r\n      .join(\" \");\r\n    const evs = pokemonRes.data.stats\r\n      .filter(stat => {\r\n        if (stat.effort > 0) {\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n      .map(stat => {\r\n        return `${stat.effort} ${stat.stat.name}`\r\n          .toLowerCase()\r\n          .split(\"-\")\r\n          .map(s => s.charAt(0).toUpperCase() + s.substring(1))\r\n          .join(\" \");\r\n      })\r\n      .join(\", \");\r\n\r\n    await axios.get(pokemonSpeciesUrl).then(res => {\r\n      let description = \"\";\r\n      res.data.flavor_text_entries.some(flavor => {\r\n        if (flavor.language.name === \"en\") {\r\n          description = flavor.flavor_text;\r\n          return;\r\n        }\r\n      });\r\n      this.setState({\r\n        description\r\n      });\r\n\r\n      this.setState({\r\n        imageUrl,\r\n        pokemonIndex,\r\n        name,\r\n        types,\r\n        stats: {\r\n          attack,\r\n          defense,\r\n          hp,\r\n          specialAttack,\r\n          specialDefense,\r\n          speed\r\n        },\r\n        weight,\r\n        moves,\r\n        evs,\r\n        abilities,\r\n        themeColor,\r\n        bgColor\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col\">\r\n        <div\r\n          className=\"btn-group btn-back\"\r\n          role=\"group\"\r\n          aria-label=\"Basic example\"\r\n        >\r\n          <Link to=\"/#\" label=\"board\">\r\n            <button type=\"button\" className=\"btn btn-secondary\">\r\n              Back\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <CardPokemon\r\n          className=\"card mx-auto card-pokemon\"\r\n          style={{\r\n            backgroundColor: `${this.state.bgColor}`\r\n          }}\r\n        >\r\n          {this.state.types.map(type => (\r\n            <div\r\n              className=\"card-header pokemon-header\"\r\n              key={type}\r\n              style={{\r\n                background: `#${colors_type[type]}`\r\n              }}\r\n            ></div>\r\n          ))}\r\n\r\n          <div className=\"card-body mx-auto\">\r\n            <div className=\"image-container\">\r\n              {this.state.imageLoading ? <h4>Loading...</h4> : null}\r\n              <img\r\n                className=\"card-img-top rounded mx-auto mt-2 mb-3 img-pokem\"\r\n                src={this.state.imageUrl}\r\n                onLoad={() => this.setState({ imageLoading: false })}\r\n              />\r\n            </div>\r\n\r\n            <h6 className=\"card-title text-capitalize name-pokemon\">\r\n              {this.state.name}\r\n              <span className=\"number\">\r\n                #{this.state.pokemonIndex.toString().padStart(3, \"0\")}\r\n              </span>\r\n            </h6>\r\n          </div>\r\n          <div className=\"card-body d-flex body-pokemon\">\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-md-9 container-species\">\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    Type\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"type-pokem\">\r\n                      {this.state.types.map(type => (\r\n                        <span\r\n                          key={type}\r\n                          className=\"badge badge-pill mr-2 text-capitalize badge-costum-pokemon\"\r\n                          style={{\r\n                            background: `#${colors_type[type]}`\r\n                          }}\r\n                        >\r\n                          {type}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    Attack\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar\"\r\n                        role=\"progressbar\"\r\n                        style={{\r\n                          width: `${this.state.stats.attack}%`,\r\n                          backgroundColor: `#${this.state.themeColor}`\r\n                        }}\r\n                        aria-valuenow=\"25\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        <small>{this.state.stats.attack}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    Defense\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar \"\r\n                        role=\"progressbar\"\r\n                        style={{\r\n                          width: `${this.state.stats.defense}%`,\r\n                          backgroundColor: `#${this.state.themeColor}`\r\n                        }}\r\n                        aria-valuenow=\"25\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        <small>{this.state.stats.defense}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    HP\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar \"\r\n                        role=\"progressbar\"\r\n                        style={{\r\n                          width: `${this.state.stats.hp}%`,\r\n                          backgroundColor: `#${this.state.themeColor}`\r\n                        }}\r\n                        aria-valuenow=\"25\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        <small>{this.state.stats.hp}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    Sp Atk\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar \"\r\n                        role=\"progressbar\"\r\n                        style={{\r\n                          width: `${this.state.stats.specialAttack}%`,\r\n                          backgroundColor: `#${this.state.themeColor}`\r\n                        }}\r\n                        aria-valuenow={this.state.stats.specialAttack}\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        <small>{this.state.stats.specialAttack}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    Sp Def\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar \"\r\n                        role=\"progressbar\"\r\n                        style={{\r\n                          width: `${this.state.stats.specialDefense}%`,\r\n                          backgroundColor: `#${this.state.themeColor}`\r\n                        }}\r\n                        aria-valuenow={this.state.stats.specialDefense}\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        <small>{this.state.stats.specialDefense}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    Speed\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        className=\"progress-bar\"\r\n                        role=\"progressbar\"\r\n                        style={{\r\n                          width: `${this.state.stats.speed}%`,\r\n                          backgroundColor: `#${this.state.themeColor}`\r\n                        }}\r\n                        aria-valuenow=\"25\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        <small>{this.state.stats.speed}</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    Weight\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"\">\r\n                      <h6 className=\"\">{this.state.weight} kg</h6>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row align-items-center\">\r\n                  <div className={`col-12 col-md-${this.state.statTitleWidth}`}>\r\n                    Total moves\r\n                  </div>\r\n                  <div className={`col-12 col-md-${this.state.statBarWidth}`}>\r\n                    <div className=\"\">\r\n                      <h6 className=\"\">{this.state.moves.length} </h6>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"col mt-1 \">\r\n                  <div className=\" description\">\r\n                    <p\r\n                      style={{\r\n                        color: `#${this.state.themeColor}`\r\n                      }}\r\n                    >\r\n                      Description:\r\n                    </p>\r\n                    <p className=\"\">{this.state.description}</p>\r\n                  </div>\r\n                  <div className=\"\">\r\n                    <p\r\n                      style={{\r\n                        color: `#${this.state.themeColor}`\r\n                      }}\r\n                    >\r\n                      Abilities:\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"\">\r\n                    <p className=\"\">{this.state.abilities}</p>\r\n                  </div>\r\n\r\n                  <div className=\"\">\r\n                    <p\r\n                      style={{\r\n                        color: `#${this.state.themeColor}`\r\n                      }}\r\n                    >\r\n                      EVs:\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"\">\r\n                    <p className=\"\">{this.state.evs}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardPokemon>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\n\nconst step = 12;\n\nexport const pokemonStore = {\n  count: 0,\n  next: `https://pokeapi.co/api/v2/pokemon/?limit=${step}`,\n  previous: null,\n  pokemons: []\n};\n\nexport const getMore = async function(updatePokemons) {\n  const {\n    data: { count, results, next }\n  } = await axios.get(pokemonStore.next);\n  pokemonStore.count = count;\n  pokemonStore.next = next;\n  pokemonStore.pokemons = [...pokemonStore.pokemons, ...results];\n\n  updatePokemons(pokemonStore.pokemons);\n};\n","import React, { useState } from \"react\";\r\nimport NavBar from \"./components/NavBar.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Board from \"./components/Board.jsx\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Pokemon from \"./components/pokemon/Pokemon\";\r\nimport { getMore, pokemonStore } from \"./store\";\r\n\r\nfunction App() {\r\n  let [pokemons, setPokemonStore] = useState(pokemonStore.pokemons);\r\n  const getMorePokemons = () => getMore(setPokemonStore);\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <NavBar />\r\n        <div className=\"d-flex\">\r\n          <div className=\"container container-custom\">\r\n            <div className=\"row justify-content-md-center pokedex\">\r\n              <div className=\"col-md-auto \">\r\n                <h1>\r\n                  <img\r\n                    src=\"https://fontmeme.com/permalink/200319/0846c5f29cb94866d7f697d546dbefeb.png\"\r\n                    alt=\"pokemon-font\"\r\n                    border=\"0\"\r\n                  />\r\n                </h1>\r\n              </div>\r\n            </div>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={props => (\r\n                  <Board\r\n                    {...props}\r\n                    pokemons={pokemons}\r\n                    getMore={getMorePokemons}\r\n                  />\r\n                )}\r\n              />\r\n              <Route exact path=\"/pokemon/:pokemonIndex\" component={Pokemon} />\r\n            </Switch>\r\n            <div className=\"single-card\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/style.sass\";\nimport App from \"./app/App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}